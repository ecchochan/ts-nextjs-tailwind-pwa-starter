fragment cartLineEdge on CartLineEdge {
  cursor
  node {
    id
    quantity
    estimatedCost {
      totalAmount {
        currencyCode
        amount
      }
    }
    merchandise {
      ... on ProductVariant {
        id
        priceV2 {
          amount
          currencyCode
        }
        requiresShipping
        title
        product {
          handle
        }
        image {
          transformedSrc(
            maxWidth: 300
            maxHeight: 400
            crop: CENTER
            preferredContentType: WEBP
          )
          altText
          id
        }
        availableForSale
        weight
        weightUnit
      }
    }
    discountAllocations {
      ... on CartCodeDiscountAllocation {
        __typename
        code
        discountedAmount {
          amount
          currencyCode
        }
      }
      ... on CartAutomaticDiscountAllocation {
        __typename
        discountedAmount {
          amount
          currencyCode
        }
        title
      }
      discountedAmount {
        amount
        currencyCode
      }
    }
  }
}

fragment cart on Cart {
  id
  checkoutUrl
  updatedAt
  discountCodes {
    code
    applicable
  }
  estimatedCost {
    totalAmount {
      currencyCode
      amount
    }
  }
  lines(first: 250) {
    edges {
      ...cartLineEdge
    }
  }
}

query getCart($cartId: ID!) {
  cart(id: $cartId) {
    ...cart
  }
}

query getCheckout($checkoutId: ID!) {
  node(id: $checkoutId) {
    ... on Checkout {
      __typename
      webUrl
      subtotalPriceV2 {
        amount
        currencyCode
      }
      totalTaxV2 {
        amount
        currencyCode
      }
      totalPriceV2 {
        amount
        currencyCode
      }
      lineItems(first: 250) {
        edges {
          node {
            id
          }
        }
      }
    }
  }
}

mutation createCart($input: CartInput!) {
  cartCreate(input: $input) {
    cart {
      ...cart
    }
    userErrors {
      code
      field
      message
    }
  }
}

query getCartItemCount($checkoutId: ID!) {
  node(id: $checkoutId) {
    ... on Checkout {
      __typename
      lineItems(first: 250) {
        edges {
          node {
            quantity
          }
        }
      }
    }
  }
}

mutation addCartItem($cartId: ID!, $lines: [CartLineInput!]!) {
  cartLinesAdd(cartId: $cartId, lines: $lines) {
    cart {
      ...cart
    }
    userErrors {
      field
      message
    }
  }
}

mutation updateCartItem($cartId: ID!, $lines: [CartLineUpdateInput!]!) {
  cartLinesUpdate(cartId: $cartId, lines: $lines) {
    cart {
      ...cart
    }
    userErrors {
      field
      message
    }
  }
}

mutation removeCartItem($cartId: ID!, $lineIds: [ID!]!) {
  cartLinesRemove(cartId: $cartId, lineIds: $lineIds) {
    cart {
      ...cart
    }
    userErrors {
      field
      message
    }
  }
}
